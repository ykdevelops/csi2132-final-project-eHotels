"use client";

import { useState } from "react";
import {
    Dialog, Typography, DialogTitle, DialogContent, DialogActions,
    Button, TextField, FormControl, InputLabel, Select, MenuItem
} from "@mui/material";

export default function NewRoomModal({ open, onClose, refreshData }) {
    const [roomData, setRoomData] = useState({
        hotel_ID: "",
        capacity: "",
        price: "",
        view: "No",
        extendible: "No",
        isAvailable: "Yes",
        issues: "",
        amenities: ""
    });

    // ✅ Handle Input Changes
    const handleChange = (e) => {
        const { name, value } = e.target;
        setRoomData((prev) => ({ ...prev, [name]: value }));
    };

    // ✅ Handle Save (auto-generate room_ID & validate)
    const handleSave = async () => {
        // 1) Simple required fields check
        const {
            hotel_ID, capacity, price,
            view, extendible, isAvailable,
            issues, amenities
        } = roomData;

        if (
            !hotel_ID.trim() ||
            !capacity.trim() ||
            !price.trim() ||
            !view.trim() ||
            !extendible.trim() ||
            !isAvailable.trim() ||
            !issues.trim() ||
            !amenities.trim()
        ) {
            alert("Please fill out all fields before saving.");
            return;
        }

        try {
            // Generate a new room_ID automatically
            const autoGeneratedId = `room_${Date.now()}`;

            // Build final data object
            const newRoom = {
                ...roomData,
                room_ID: autoGeneratedId,
                bookedDates: [] // or leave it out if your DB structure doesn't require it
            };

            const response = await fetch("/api/employee/createRoom", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ type: "rooms", data: newRoom })
            });

            const result = await response.json();
            if (response.ok) {
                alert("New room added successfully!");
                refreshData();
                onClose();
            } else {
                alert(`Error: ${result.error}`);
            }
        } catch (error) {
            console.error("❌ Error saving new room:", error);
            alert("Failed to save new room.");
        }
    };

    return (
        <Dialog open={open} onClose={onClose} fullWidth maxWidth="sm">
            <DialogTitle>Add New Room</DialogTitle>
            <DialogContent>
                {/* Removed "Room ID" field, since it's auto-generated */}
                <TextField
                    fullWidth
                    label="Hotel ID"
                    name="hotel_ID"
                    value={roomData.hotel_ID}
                    onChange={handleChange}
                    margin="normal"
                    required
                />
                <TextField
                    fullWidth
                    label="Capacity"
                    name="capacity"
                    type="number"
                    value={roomData.capacity}
                    onChange={handleChange}
                    margin="normal"
                    required
                />
                <TextField
                    fullWidth
                    label="Price"
                    name="price"
                    type="number"
                    value={roomData.price}
                    onChange={handleChange}
                    margin="normal"
                    required
                />

                <FormControl fullWidth margin="normal" required>
                    <InputLabel>View</InputLabel>
                    <Select name="view" value={roomData.view} onChange={handleChange}>
                        <MenuItem value="Yes">Yes</MenuItem>
                        <MenuItem value="No">No</MenuItem>
                    </Select>
                </FormControl>

                <FormControl fullWidth margin="normal" required>
                    <InputLabel>Extendible</InputLabel>
                    <Select
                        name="extendible"
                        value={roomData.extendible}
                        onChange={handleChange}
                    >
                        <MenuItem value="Yes">Yes</MenuItem>
                        <MenuItem value="No">No</MenuItem>
                    </Select>
                </FormControl>

                <FormControl fullWidth margin="normal" required>
                    <InputLabel>Available</InputLabel>
                    <Select
                        name="isAvailable"
                        value={roomData.isAvailable}
                        onChange={handleChange}
                    >
                        <MenuItem value="Yes">Yes</MenuItem>
                        <MenuItem value="No">No</MenuItem>
                    </Select>
                </FormControl>

                <TextField
                    fullWidth
                    label="Issues"
                    name="issues"
                    value={roomData.issues}
                    onChange={handleChange}
                    margin="normal"
                    required
                />
                <TextField
                    fullWidth
                    label="Amenities (comma-separated)"
                    name="amenities"
                    value={roomData.amenities}
                    onChange={handleChange}
                    margin="normal"
                    required
                />

                {/* Removed Booked Dates functionality altogether */}
            </DialogContent>
            <DialogActions>
                <Button onClick={onClose} color="secondary">
                    Cancel
                </Button>
                <Button onClick={handleSave} variant="contained" color="primary">
                    Save
                </Button>
            </DialogActions>
        </Dialog>
    );
}
